// Copyright Â©, 2023-present, Lightspark Group, Inc. - All Rights Reserved
@file:Suppress("ktlint:max-line-length")

package com.lightspark.sdk.model

import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable

/**
 *
 * @param count The total count of objects in this connection, using the current filters. It is different from the number of objects returned in the current page (in the `entities` field).
 * @param entities The transactions for the current page of this connection.
 * @param pageInfo An object that holds pagination information about the objects in this connection.
 * @param profitLoss Profit (or loss) generated by the transactions in this connection, with the set of filters and constraints provided.
 * @param averageFeeEarned Average fee earned for the transactions in this connection, with the set of filters and constraints provided.
 * @param totalAmountTransacted Total amount transacted by the transactions in this connection, with the set of filters and constraints provided.
 */
@Serializable
@SerialName("AccountToTransactionsConnection")
data class AccountToTransactionsConnection(

    @SerialName("account_to_transactions_connection_count")
    val count: Int,
    @SerialName("account_to_transactions_connection_entities")
    val entities: List<Transaction>,
    @SerialName("account_to_transactions_connection_page_info")
    val pageInfo: PageInfo,
    @SerialName("account_to_transactions_connection_profit_loss")
    val profitLoss: CurrencyAmount? = null,
    @SerialName("account_to_transactions_connection_average_fee_earned")
    val averageFeeEarned: CurrencyAmount? = null,
    @SerialName("account_to_transactions_connection_total_amount_transacted")
    val totalAmountTransacted: CurrencyAmount? = null,
) {

    companion object {
        const val FRAGMENT = """
fragment AccountToTransactionsConnectionFragment on AccountToTransactionsConnection {
    type: __typename
    account_to_transactions_connection_profit_loss: profit_loss {
        type: __typename
        currency_amount_value: value
        currency_amount_unit: unit
        currency_amount_original_value: original_value
        currency_amount_original_unit: original_unit
        currency_amount_preferred_currency_unit: preferred_currency_unit
        currency_amount_preferred_currency_value_rounded: preferred_currency_value_rounded
        currency_amount_preferred_currency_value_approx: preferred_currency_value_approx
    }
    account_to_transactions_connection_average_fee_earned: average_fee_earned {
        type: __typename
        currency_amount_value: value
        currency_amount_unit: unit
        currency_amount_original_value: original_value
        currency_amount_original_unit: original_unit
        currency_amount_preferred_currency_unit: preferred_currency_unit
        currency_amount_preferred_currency_value_rounded: preferred_currency_value_rounded
        currency_amount_preferred_currency_value_approx: preferred_currency_value_approx
    }
    account_to_transactions_connection_count: count
    account_to_transactions_connection_total_amount_transacted: total_amount_transacted {
        type: __typename
        currency_amount_value: value
        currency_amount_unit: unit
        currency_amount_original_value: original_value
        currency_amount_original_unit: original_unit
        currency_amount_preferred_currency_unit: preferred_currency_unit
        currency_amount_preferred_currency_value_rounded: preferred_currency_value_rounded
        currency_amount_preferred_currency_value_approx: preferred_currency_value_approx
    }
    account_to_transactions_connection_entities: entities {
        id
    }
    account_to_transactions_connection_page_info: page_info {
        type: __typename
        page_info_has_next_page: has_next_page
        page_info_has_previous_page: has_previous_page
        page_info_start_cursor: start_cursor
        page_info_end_cursor: end_cursor
    }
}"""
    }
}
